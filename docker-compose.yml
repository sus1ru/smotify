services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - .:/code
    env_file: .env
    depends_on:
      - pgdb
    ports:
      - 8050:8000
    entrypoint: sh /code/entrypoint.sh
    networks:
      - smotify

  pgdb:
    image: postgres:16-alpine
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    ports:
      - 5462:5432
    env_file: .env
    healthcheck:
      test: [ 'CMD', 'psql', '-U', 'postgres', '-c', 'SELECT 1' ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - smotify

  redis:
    image: redis:alpine
    restart: always
    entrypoint: redis-server --appendonly yes
    # ports:
    #   - 6379:6379
    volumes:
      - ./redis_data:/var/lib/redis
      - ./redis/rc.local:/etc/rc.local
    networks:
      - smotify

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    entrypoint: [
        "celery", "--app", "smotify", "worker",
        "--loglevel=info", "-Q", "default,smotify"
      ]
    depends_on:
      - web
      - redis
    volumes:
      - .:/code
      - ./logs/:/logs/
    env_file: .env
    networks:
      - smotify

  beat:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    entrypoint: [
        "celery", "--app", "smotify", "beat",
        "--loglevel=info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"
      ]
    depends_on:
      - web
      - redis
      - worker
    volumes:
      - .:/code
      - ./logs/:/logs/
    env_file: .env
    networks:
      - smotify

networks:
  smotify:
    name: smotify
    driver: bridge